create or replace package body PCK_ALC_PLANOPERATIVO is

PROCEDURE PRC_BUSCA_PARAMETROPLAN(
   --Campos Identificador registro
   PAR_CODPLA           ALC_VALORESXPARA.N_CODPLA%TYPE,
   PAR_OUT_CURSOR OUT SYS_REFCURSOR
)
IS
v_query VARCHAR2(1000);

 BEGIN 
    v_query :=  'SELECT 
       N_CODVXP, N_CODSXP, N_CODPLA, C_TIPOPA, C_CODESC,
       C_DESCRI, C_UNIMED, N_METAPR, N_CANM01, N_CANM02,
       N_CANM03, N_CANM04, N_CANM05, N_CANM06, N_CANM07,
       N_CANM08, N_CANM09, N_CANM10, N_CANM11, N_CANM12,
       N_STATUS, N_CODARE, N_CODACT, N_CODSUB
       FROM ALC_VALORESXPARA WHERE N_CODPLA = ' || PAR_CODPLA || ' AND N_STATUS = 1';
    OPEN PAR_OUT_CURSOR FOR v_query;
END;

PROCEDURE PRC_GET_PARAMETROPLAN(
   --Campos Identificador registro
   PAR_CODSXP                  ALC_VALORESXPARA.N_CODSXP%TYPE,
   PAR_CODPLA                  ALC_VALORESXPARA.N_CODPLA%TYPE,
   PAR_OUT_CURSOR OUT SYS_REFCURSOR
)
IS
v_query VARCHAR2(1000);
v_where VARCHAR2(300);

 BEGIN 
    v_query :=   'SELECT 
       N_CODVXP, N_CODSXP, N_CODPLA, C_TIPOPA, C_CODESC,
       C_DESCRI, C_UNIMED, N_METAPR, N_CANM01, N_CANM02,
       N_CANM03, N_CANM04, N_CANM05, N_CANM06, N_CANM07,
       N_CANM08, N_CANM09, N_CANM10, N_CANM11, N_CANM12,
       N_STATUS, N_CODARE, N_CODACT, N_CODSUB

       FROM ALC_VALORESXPARA WHERE N_CODPLA = ' || PAR_CODPLA ;
       v_where := ' AND N_CODSXP = ' || PAR_CODSXP;
       v_query := v_query||v_where;
    OPEN PAR_OUT_CURSOR FOR v_query;

END;

PROCEDURE PRC_INSERT_PARAMETROPLAN(
   --auditoria
  PAR_USUCRE           ALC_VALORESXPARA.A_USUCRE%TYPE,
  PAR_NOMPRG           ALC_VALORESXPARA.A_NOMPRG%TYPE,

   --parametros
  PAR_CODSXP           ALC_VALORESXPARA.N_CODSXP%TYPE,
  PAR_CODPLA           ALC_VALORESXPARA.N_CODPLA%TYPE,
  PAR_TIPOPA           ALC_VALORESXPARA.C_TIPOPA%TYPE,
  PAR_CODESC           ALC_VALORESXPARA.C_CODESC%TYPE,
  PAR_DESCRI           ALC_VALORESXPARA.C_DESCRI%TYPE,
  PAR_UNIMED           ALC_VALORESXPARA.C_UNIMED%TYPE,
  PAR_METAPR           ALC_VALORESXPARA.N_METAPR%TYPE,
  PAR_CANM01           ALC_VALORESXPARA.N_CANM01%TYPE,
  PAR_CANM02           ALC_VALORESXPARA.N_CANM02%TYPE,
  PAR_CANM03           ALC_VALORESXPARA.N_CANM03%TYPE,
  PAR_CANM04           ALC_VALORESXPARA.N_CANM04%TYPE,
  PAR_CANM05           ALC_VALORESXPARA.N_CANM05%TYPE,
  PAR_CANM06           ALC_VALORESXPARA.N_CANM06%TYPE,
  PAR_CANM07           ALC_VALORESXPARA.N_CANM07%TYPE,
  PAR_CANM08           ALC_VALORESXPARA.N_CANM08%TYPE,
  PAR_CANM09           ALC_VALORESXPARA.N_CANM09%TYPE,
  PAR_CANM10           ALC_VALORESXPARA.N_CANM10%TYPE,
  PAR_CANM11           ALC_VALORESXPARA.N_CANM11%TYPE,
  PAR_CANM12           ALC_VALORESXPARA.N_CANM12%TYPE,
  PAR_STATUS           ALC_VALORESXPARA.N_STATUS%TYPE,
  PAR_CODARE           ALC_VALORESXPARA.N_CODARE%TYPE,
  PAR_CODACT           ALC_VALORESXPARA.N_CODACT%TYPE,
  PAR_CODSUB           ALC_VALORESXPARA.N_CODSUB%TYPE  
 )
 IS
 BEGIN
 INSERT INTO ALC_VALORESXPARA (
       A_USUCRE, A_USUMOD, A_FECCRE, A_NOMPRG, 
       N_CODVXP, N_CODSXP, N_CODPLA, C_TIPOPA, C_CODESC,
       C_DESCRI, C_UNIMED, N_METAPR, N_CANM01, N_CANM02, 
       N_CANM03, N_CANM04, N_CANM05, N_CANM06, N_CANM07, 
       N_CANM08, N_CANM09, N_CANM10, N_CANM11, N_CANM12,
       N_STATUS, N_CODARE, N_CODACT, N_CODSUB )

 VALUES ( PAR_USUCRE,PAR_USUCRE, SYSDATE,PAR_NOMPRG, 
        SQ_ALC_VALORESXPARA.NEXTVAL, PAR_CODSXP, PAR_CODPLA, NVL(PAR_TIPOPA, ' '),  NVL(PAR_CODESC, ' '), 
        PAR_DESCRI, PAR_UNIMED, PAR_METAPR, PAR_CANM01, PAR_CANM02,
        PAR_CANM03, PAR_CANM04, PAR_CANM05, PAR_CANM06, PAR_CANM07,
        PAR_CANM08, PAR_CANM09, PAR_CANM10, PAR_CANM11, PAR_CANM12, 
        PAR_STATUS, PAR_CODARE, PAR_CODACT, PAR_CODSUB );
END;

PROCEDURE PRC_UPDATE_PARAMETROPLAN(

   --auditoria
  PAR_USUMOD           ALC_VALORESXPARA.A_USUMOD%TYPE,
  PAR_NOMPRG           ALC_VALORESXPARA.A_NOMPRG%TYPE,

   --parametros

  PAR_CODSXP           ALC_VALORESXPARA.N_CODSXP%TYPE,
  PAR_CODPLA           ALC_VALORESXPARA.N_CODPLA%TYPE,
  PAR_TIPOPA           ALC_VALORESXPARA.C_TIPOPA%TYPE,
  PAR_CODESC           ALC_VALORESXPARA.C_CODESC%TYPE,
  PAR_DESCRI           ALC_VALORESXPARA.C_DESCRI%TYPE,
  PAR_UNIMED           ALC_VALORESXPARA.C_UNIMED%TYPE,
  PAR_METAPR           ALC_VALORESXPARA.N_METAPR%TYPE,
  PAR_CANM01           ALC_VALORESXPARA.N_CANM01%TYPE,
  PAR_CANM02           ALC_VALORESXPARA.N_CANM02%TYPE,
  PAR_CANM03           ALC_VALORESXPARA.N_CANM03%TYPE,
  PAR_CANM04           ALC_VALORESXPARA.N_CANM04%TYPE,
  PAR_CANM05           ALC_VALORESXPARA.N_CANM05%TYPE,
  PAR_CANM06           ALC_VALORESXPARA.N_CANM06%TYPE,
  PAR_CANM07           ALC_VALORESXPARA.N_CANM07%TYPE,
  PAR_CANM08           ALC_VALORESXPARA.N_CANM08%TYPE,
  PAR_CANM09           ALC_VALORESXPARA.N_CANM09%TYPE,
  PAR_CANM10           ALC_VALORESXPARA.N_CANM10%TYPE,
  PAR_CANM11           ALC_VALORESXPARA.N_CANM11%TYPE,
  PAR_CANM12           ALC_VALORESXPARA.N_CANM12%TYPE,
  PAR_STATUS           ALC_VALORESXPARA.N_STATUS%TYPE,
  PAR_CODARE           ALC_VALORESXPARA.N_CODARE%TYPE,
  PAR_CODACT           ALC_VALORESXPARA.N_CODACT%TYPE,
  PAR_CODSUB           ALC_VALORESXPARA.N_CODSUB%TYPE  
)
 IS
 BEGIN

  UPDATE ALC_VALORESXPARA
  SET 
    A_USUMOD=PAR_USUMOD,
  A_NOMPRG=PAR_NOMPRG,

  N_CODSXP=PAR_CODSXP,
  N_CODPLA=PAR_CODPLA,
  C_TIPOPA=NVL(PAR_TIPOPA, ' '),
    C_CODESC=NVL(PAR_CODESC, ' '),
    C_DESCRI=NVL(PAR_DESCRI, ' '),
  C_UNIMED=PAR_UNIMED,
  N_METAPR=PAR_METAPR,
  N_CANM01=PAR_CANM01,
  N_CANM02=PAR_CANM02,
  N_CANM03=PAR_CANM03,
  N_CANM04=PAR_CANM04,
  N_CANM05=PAR_CANM05,
  N_CANM06=PAR_CANM06,
  N_CANM07=PAR_CANM07,
  N_CANM08=PAR_CANM08,
  N_CANM09=PAR_CANM09,
  N_CANM10=PAR_CANM10,
  N_CANM11=PAR_CANM11,
  N_CANM12=PAR_CANM12,
  N_STATUS=PAR_STATUS,
  N_CODARE=PAR_CODARE,
  N_CODACT=PAR_CODACT,
  N_CODSUB=PAR_CODSUB

  WHERE N_CODSXP = PAR_CODSXP AND N_CODPLA = PAR_CODPLA;

END;

PROCEDURE PRC_UPDATE_PLANOPERATIVO(

   --auditoria
  PAR_USUMOD           ALC_PLANOPERATIV.A_USUMOD%TYPE,
  PAR_NOMPRG           ALC_PLANOPERATIV.A_NOMPRG%TYPE,

   --parametros
    PAR_CODPLA           ALC_PLANOPERATIV.N_CODPLA%TYPE,
  PAR_ESTPLA           ALC_PLANOPERATIV.N_ESTPLA%TYPE,
    PAR_STATUS           ALC_PLANOPERATIV.N_STATUS%TYPE,
    PAR_OUT_RETURN        OUT INTEGER
)
 IS
 N_ESTADO NUMBER(1);
 BEGIN
      SELECT N_ESTPLA INTO N_ESTADO FROM ALC_PLANOPERATIV WHERE N_CODPLA = PAR_CODPLA;

      IF (N_ESTADO = 1 OR PAR_ESTPLA = 1) THEN
         UPDATE ALC_PLANOPERATIV
         SET 
            A_USUMOD = PAR_USUMOD,
            A_NOMPRG = PAR_NOMPRG,
            N_ESTPLA = PAR_ESTPLA,
            N_STATUS = PAR_STATUS,
            A_FECMOD = SYSDATE
         WHERE N_CODPLA = PAR_CODPLA;

         PAR_OUT_RETURN := 0;

      ELSE 
         PAR_OUT_RETURN := -2; --PLAN ACTIVO, NO PUEDE ELINARSE
      END IF;      

END;

PROCEDURE PRC_GET_PLANOPERATIVO (
   --Campos Identificador registro
   PAR_CODPLA                ALC_PLANOPERATIV.N_CODPLA%TYPE,
   PAR_OUT_CURSOR OUT SYS_REFCURSOR
)
IS
v_query VARCHAR2(1000);

 BEGIN 
    v_query :=   'SELECT N_CODPLA,C_DESPLA,C_CODESP,N_ESTPLA,N_STATUS
       FROM ALC_PLANOPERATIV WHERE N_CODPLA = ' || PAR_CODPLA ;

    OPEN PAR_OUT_CURSOR FOR v_query;

 END;

  PROCEDURE PRC_BUSCA_PLANOPERATIVO( 
      --PARAMETROS DE LA BUSQUEDA
       PAR_FLAGREPORTE     IN INTEGER,

       --PARAMETROS DE LA PAGINACION
       PAR_CODARE     IN INTEGER,
       PAR_COL_ORDER_BY     IN INTEGER,
       PAR_COL_ORDER_BY_DIR IN VARCHAR2 ,
       PAR_PAG_DESDE        IN INTEGER,
       PAR_CANTIDAD_PAG     IN INTEGER,
       --PARAMETROS DE RETORNO
       PAR_OUT_QUANTITY     OUT INTEGER,
       PAR_OUT_CURSOR       OUT SYS_REFCURSOR
    ) IS 
    V_QUERY VARCHAR2(4000);
    V_QUERY_FROM VARCHAR2(4000);
    V_QUERY_COUNT VARCHAR2(4000);
    V_QUERY_AND VARCHAR2(100);
    BEGIN
        IF PAR_FLAGREPORTE = 0 THEN
          V_QUERY_AND := ' AND N_ESTPLA= ' || PAR_FLAGREPORTE;
        ELSE
          V_QUERY_AND := '';
        END IF;

        IF PAR_CODARE = -1 THEN
          V_QUERY_FROM := ' from ALC_PLANOPERATIV c WHERE N_STATUS = 1 ';
        ELSE
          V_QUERY_FROM := ' from ALC_PLANOPERATIV c WHERE N_STATUS = 1 AND N_CODARE = ' || PAR_CODARE;
        END IF;

          V_QUERY_FROM := V_QUERY_FROM || V_QUERY_AND;

          V_QUERY_COUNT := 'select count(*) '; 
          V_QUERY := 'select * 
                      from (select a.*, rownum rn
                            from (select  c.N_CODPLA, c.C_DESPLA, c.C_CODESP, DECODE(c.N_CODARE, 1, ''BIOLOG\u00EDA'', 2, ''FISICOQU\u00EDMICA'') ,c.N_ESTPLA, c.n_codare, C_PERIOD ';

          V_QUERY := V_QUERY || V_QUERY_FROM;

          V_QUERY_COUNT := V_QUERY_COUNT || V_QUERY_FROM;

          V_QUERY := V_QUERY || ' order by '|| PAR_COL_ORDER_BY || ' ' || PAR_COL_ORDER_BY_DIR || ' ) a ) where rn > ' || PAR_PAG_DESDE || ' and rn <= ' || (PAR_PAG_DESDE+PAR_CANTIDAD_PAG);

          OPEN par_out_cursor FOR v_query;
          execute immediate v_query_count into par_out_quantity;

    END;

    PROCEDURE PRC_INSERT_PLANOPERATIVO(
    PAR_CODARE           ALC_PLANOPERATIV.N_CODARE%TYPE,
   --auditoria
  PAR_USUCRE           ALC_PLANOPERATIV.A_USUCRE%TYPE,
  PAR_NOMPRG           ALC_PLANOPERATIV.A_NOMPRG%TYPE,

    PAR_DESPLA           ALC_PLANOPERATIV.C_DESPLA%TYPE,
    PAR_CODESP           ALC_PLANOPERATIV.C_CODESP%TYPE,
    PAR_PERIOD           ALC_PLANOPERATIV.C_PERIOD%TYPE
 )
 IS
 BEGIN
 INSERT INTO ALC_PLANOPERATIV (
       A_USUCRE,A_USUMOD, A_FECCRE, A_NOMPRG, 
       N_CODPLA, C_DESPLA, C_CODESP,
       N_STATUS,N_ESTPLA,N_CODARE,C_PERIOD)

 VALUES ( PAR_USUCRE,PAR_USUCRE, SYSDATE, PAR_NOMPRG, 
        SQ_ALC_PLANOPERATIV.NEXTVAL, PAR_DESPLA, PAR_CODESP , 1,1 ,PAR_CODARE,PAR_PERIOD);
END;


PROCEDURE PRC_INACTIVAR_PARAMETROPLAN(

   --auditoria
  PAR_USUMOD           ALC_VALORESXPARA.A_USUMOD%TYPE,
  PAR_NOMPRG           ALC_VALORESXPARA.A_NOMPRG%TYPE,
   --parametros
  PAR_CODSXP           ALC_VALORESXPARA.N_CODSXP%TYPE,
    PAR_CODPLA           ALC_VALORESXPARA.N_CODPLA%TYPE,
    PAR_STATUS           ALC_VALORESXPARA.N_STATUS%TYPE
)
 IS
 BEGIN

  UPDATE ALC_VALORESXPARA
  SET 
    A_USUMOD = PAR_USUMOD,
	A_NOMPRG = PAR_NOMPRG,
    N_STATUS = PAR_STATUS
  WHERE N_CODSXP = PAR_CODSXP AND N_CODPLA = PAR_CODPLA;

END;


PROCEDURE PRC_BUSCA_REPORTE_PLAN(
   --Campos Identificador registro
   PAR_CODPLA           ALC_VALORESXPARA.N_CODPLA%TYPE,
   PAR_MES           VARCHAR2,
   PAR_OUT_CURSOR OUT SYS_REFCURSOR
)
IS
v_query VARCHAR2(1000);
v_mes VARCHAR2(100);

 BEGIN 
    v_mes := ' N_CANM' || PAR_MES || ', N_EJEC' || PAR_MES;
    v_query :=  'SELECT  c.C_DDCATL, c.N_CODACT , d.C_DDCATL , d.N_CDCATL, c.C_DESCRI, c.N_CODSXP,'|| v_mes ||  ' , f.N_CODPAR FROM ALC_DETCATLG d
INNER JOIN (SELECT N_CODPLA,C_DDCATL,N_CODACT,N_CODSUB,C_DESCRI,N_CODSXP,' || v_mes || ',N_STATUS FROM ALC_VALORESXPARA a
INNER JOIN ALC_DETCATLG  b ON a.N_CODACT = b.N_CDCATL) c ON c.N_CODSUB = d.N_CDCATL 
INNER JOIN ALC_DETSUBACXPAR f ON c.N_CODSXP = f.N_CODSXP
WHERE c.N_CODPLA = ' || PAR_CODPLA || ' AND c.N_STATUS=1';


    OPEN PAR_OUT_CURSOR FOR v_query;
END;

PROCEDURE PRC_INSERT_REPORTEPLAN(
   --auditoria
	PAR_USUCRE           ALC_REPORTPLANOP.A_USUCRE%TYPE,
	PAR_NOMPRG           ALC_REPORTPLANOP.A_NOMPRG%TYPE,

   --parametros
	PAR_CODPLA           ALC_REPORTPLANOP.N_CODPLA%TYPE,
    PAR_CODARE           ALC_REPORTPLANOP.N_CODARE%TYPE,
    PAR_CODACT           ALC_REPORTPLANOP.N_CODACT%TYPE,
    PAR_CODSUB           ALC_REPORTPLANOP.N_CODSUB%TYPE,
    PAR_CODPAR           ALC_REPORTPLANOP.N_CODPAR%TYPE,
    PAR_TOTEJE           ALC_REPORTPLANOP.N_TOTEJE%TYPE
)
 IS
 BEGIN
 INSERT INTO ALC_REPORTPLANOP (
       A_USUCRE,A_USUMOD, A_FECCRE, A_NOMPRG, 
       N_CODIGO, N_CODPLA, N_CODARE, N_CODACT, N_CODSUB ,N_CODPAR, N_TOTEJE)

 VALUES ( PAR_USUCRE, PAR_USUCRE, SYSDATE,PAR_NOMPRG, 
        SQ_ALC_REPORTPLANOP.NEXTVAL,PAR_CODPLA, PAR_CODARE, PAR_CODACT, PAR_CODSUB, PAR_CODPAR,PAR_TOTEJE
        );
END;

PROCEDURE PRC_UPDATE_REPORTEPLAN(
   --auditoria
	PAR_USUMOD           ALC_REPORTPLANOP.A_USUMOD%TYPE,
	PAR_NOMPRG           ALC_REPORTPLANOP.A_NOMPRG%TYPE,

   --parametros
  	PAR_MES           VARCHAR,
    PAR_CODPLA           ALC_REPORTPLANOP.N_CODPLA%TYPE,
    PAR_CODPAR           ALC_REPORTPLANOP.N_CODPAR%TYPE,
    PAR_TOTEJE           ALC_REPORTPLANOP.N_TOTEJE%TYPE
)
 IS 

 v_update VARCHAR2(300);
 BEGIN

      v_update := 'UPDATE ALC_VALORESXPARA SET N_EJEC'|| PAR_MES || ' = ' || PAR_TOTEJE || ' WHERE N_CODPLA = ' || PAR_CODPLA  || ' AND N_CODSXP = ' || PAR_CODPAR;
   -- v_update := 'UPDATE ALC_VALORESXPARA SET N_EJEC01 = 1111  WHERE N_CODPLA = 1 AND N_CODSXP = 1';
    EXECUTE IMMEDIATE v_update;

END;


PROCEDURE PRC_BUSCA_TOTALES_FORM20(
   --Campos Identificador registro
   PAR_PERIOD        INTEGER,
   PAR_MES          VARCHAR2,
   PAR_TIPRES        INTEGER,
   PAR_OUT_CURSOR OUT SYS_REFCURSOR
)
IS
v_query VARCHAR2(1500);
v_mm VARCHAR2(4);
v_yy VARCHAR2(4);
    BEGIN 
        v_mm :=  'mm';
        v_yy :=  'yy';
          v_query :=  'SELECT c.n_tipres,SUM(TRIM(c.c_coltot)), SUM(TRIM(c.c_colter)), SUM(TRIM(c.c_bachet))
           FROM ALC_RESULTMUESTR c  
           INNER JOIN ALC_FORMULHEADER d ON C.N_CODHFO = d.N_CODHFO
           WHERE  c.n_tipres = ' || PAR_TIPRES || ' AND TO_CHAR(D_FECMUE,''mm'') = ' || PAR_MES  || ' AND TO_CHAR(D_FECMUE,''YYYY'') = ' || PAR_PERIOD ||
           ' GROUP BY c.n_tipres';


        OPEN PAR_OUT_CURSOR FOR v_query;
    END;

end PCK_ALC_PLANOPERATIVO;